{"ast":null,"code":"var _jsxFileName = \"/Users/nickhuemmer/projects/blog-platform/client/src/pages/PostDetailPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PostDetailPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [post, setPost] = useState(null);\n  const [comments, setComments] = useState([]);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    // Fetch the blog post details\n    axios.get(`${process.env.REACT_APP_API_URL}/api/posts/${id}`).then(response => {\n      setPost(response.data);\n    }).catch(error => console.error('Error fetching post data:', error));\n\n    // Fetch the comments for this post\n    axios.get(`${process.env.REACT_APP_API_URL}/api/comments/post/${id}`).then(response => {\n      setComments(response.data);\n    }).catch(error => console.error('Error fetching comments:', error));\n  }, [id]);\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n\n    // Post the new comment to the server\n    axios.post(`${process.env.REACT_APP_API_URL}/api/comments`, {\n      post_id: id,\n      author_id: 1,\n      // Replace with the actual logged-in user ID\n      content: newComment\n    }).then(response => {\n      setComments([...comments, response.data]);\n      setNewComment('');\n    }).catch(error => console.error('Error posting comment:', error));\n  };\n  if (!post) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading post...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post-detail-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: post.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Author ID: \", post.author_id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Comments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this), comments.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: comment.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: [\"Comment by User ID: \", comment.author_id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, comment.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No comments yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleCommentSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newComment,\n          onChange: e => setNewComment(e.target.value),\n          placeholder: \"Add a comment\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n_s(PostDetailPage, \"vYcnaA+MtnxynjUJ4gBxZblTQco=\", false, function () {\n  return [useParams];\n});\n_c = PostDetailPage;\nexport default PostDetailPage;\nvar _c;\n$RefreshReg$(_c, \"PostDetailPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","axios","Header","Footer","jsxDEV","_jsxDEV","PostDetailPage","_s","id","post","setPost","comments","setComments","newComment","setNewComment","get","process","env","REACT_APP_API_URL","then","response","data","catch","error","console","handleCommentSubmit","e","preventDefault","post_id","author_id","content","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","length","map","comment","onSubmit","value","onChange","target","placeholder","required","type","_c","$RefreshReg$"],"sources":["/Users/nickhuemmer/projects/blog-platform/client/src/pages/PostDetailPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport Header from '../components/Header';\nimport Footer from '../components/Footer';\nfunction PostDetailPage() {\n    const { id } = useParams();\n    const [post, setPost] = useState(null);\n    const [comments, setComments] = useState([]);\n    const [newComment, setNewComment] = useState('');\n\n    useEffect(() => {\n        // Fetch the blog post details\n        axios.get(`${process.env.REACT_APP_API_URL}/api/posts/${id}`)\n            .then(response => {\n                setPost(response.data);\n            })\n            .catch(error => console.error('Error fetching post data:', error));\n\n        // Fetch the comments for this post\n        axios.get(`${process.env.REACT_APP_API_URL}/api/comments/post/${id}`)\n            .then(response => {\n                setComments(response.data);\n            })\n            .catch(error => console.error('Error fetching comments:', error));\n    }, [id]);\n\n    const handleCommentSubmit = (e) => {\n        e.preventDefault();\n\n        // Post the new comment to the server\n        axios.post(`${process.env.REACT_APP_API_URL}/api/comments`, {\n            post_id: id,\n            author_id: 1, // Replace with the actual logged-in user ID\n            content: newComment,\n        })\n        .then(response => {\n            setComments([...comments, response.data]);\n            setNewComment('');\n        })\n        .catch(error => console.error('Error posting comment:', error));\n    };\n\n    if (!post) {\n        return <div>Loading post...</div>;\n    }\n\n    return (\n        <div>\n            <Header />\n        \n        <div className=\"post-detail-container\">\n            <h1>{post.title}</h1>\n            <p>{post.content}</p>\n            <p>Author ID: {post.author_id}</p>\n\n            <h2>Comments</h2>\n            {comments.length > 0 ? (\n                <ul>\n                    {comments.map(comment => (\n                        <li key={comment.id}>\n                            <p>{comment.content}</p>\n                            <small>Comment by User ID: {comment.author_id}</small>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No comments yet.</p>\n            )}\n\n            <form onSubmit={handleCommentSubmit}>\n                <textarea\n                    value={newComment}\n                    onChange={(e) => setNewComment(e.target.value)}\n                    placeholder=\"Add a comment\"\n                    required\n                />\n                <button type=\"submit\">Submit Comment</button>\n            </form>\n        </div>\n        </div>\n    );\n}\n\nexport default PostDetailPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}