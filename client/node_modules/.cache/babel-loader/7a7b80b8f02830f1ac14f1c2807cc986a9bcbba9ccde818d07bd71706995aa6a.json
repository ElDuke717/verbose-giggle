{"ast":null,"code":"var _jsxFileName = \"/Users/nickhuemmer/projects/blog-platform/client/src/pages/PostListPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport \"./css/styles.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction PostListPage() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    axios.get(`${process.env.REACT_APP_API_URL}/api/posts`).then(response => {\n      // Since the API returns the array of posts directly\n      setPosts(response.data);\n    }).catch(error => {\n      console.error(\"There was an error fetching the posts!\", error);\n      setPosts([]); // Set posts to an empty array to avoid errors\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Blog Posts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), posts.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/posts/${post.id}`,\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No posts available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(PostListPage, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = PostListPage;\nexport default PostListPage;\nvar _c;\n$RefreshReg$(_c, \"PostListPage\");","map":{"version":3,"names":["React","useEffect","useState","Link","axios","Header","Footer","jsxDEV","_jsxDEV","Fragment","_Fragment","PostListPage","_s","posts","setPosts","get","process","env","REACT_APP_API_URL","then","response","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","post","to","id","title","_c","$RefreshReg$"],"sources":["/Users/nickhuemmer/projects/blog-platform/client/src/pages/PostListPage.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Header from \"../components/Header\";\nimport Footer from \"../components/Footer\";\nimport \"./css/styles.css\";\n\nfunction PostListPage() {\n  const [posts, setPosts] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/api/posts`)\n      .then((response) => {\n        // Since the API returns the array of posts directly\n        setPosts(response.data);\n      })\n      .catch((error) => {\n        console.error(\"There was an error fetching the posts!\", error);\n        setPosts([]); // Set posts to an empty array to avoid errors\n      });\n  }, []);\n\n  return (\n    <div>\n      <Header />\n      <>\n        <h1>Blog Posts</h1>\n        {posts.length > 0 ? (\n          <ul>\n            {posts.map((post) => (\n              <li key={post.id}>\n                <Link to={`/posts/${post.id}`}>{post.title}</Link>\n              </li>\n            ))}\n          </ul>\n        ) : (\n          <p>No posts available.</p>\n        )}\n      </>\n      <Footer />\n    </div>\n  );\n}\n\nexport default PostListPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACdG,KAAK,CACFW,GAAG,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,YAAY,CAAC,CACjDC,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACAN,QAAQ,CAACM,QAAQ,CAACC,IAAI,CAAC;IACzB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;MAC9DT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAiB,QAAA,gBACEjB,OAAA,CAACH,MAAM;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA,CAAAE,SAAA;MAAAe,QAAA,gBACEjB,OAAA;QAAAiB,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClBhB,KAAK,CAACiB,MAAM,GAAG,CAAC,gBACftB,OAAA;QAAAiB,QAAA,EACGZ,KAAK,CAACkB,GAAG,CAAEC,IAAI,iBACdxB,OAAA;UAAAiB,QAAA,eACEjB,OAAA,CAACL,IAAI;YAAC8B,EAAE,EAAE,UAAUD,IAAI,CAACE,EAAE,EAAG;YAAAT,QAAA,EAAEO,IAAI,CAACG;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO;QAAC,GAD3CG,IAAI,CAACE,EAAE;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEZ,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,gBAELrB,OAAA;QAAAiB,QAAA,EAAG;MAAmB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC1B;IAAA,eACD,CAAC,eACHrB,OAAA,CAACF,MAAM;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAACjB,EAAA,CApCQD,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAsCrB,eAAeA,YAAY;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}